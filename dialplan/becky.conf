; Becky Phone IVR, the phone menu from hell !
;
; Original dialplan written by Gregory Eric Sanderson as a fun weekend project.
;
; Inspired by Marc Labreche's Soap Opera Parody 'Le coeur a ses raisons'.
; In the epsiode, Brett attempts to call Becky but reaches her voicemail,
; and gets lost trying to navigate the very confusing phone menu ;)
; original sketch can be viewed on youtube (https://www.youtube.com/watch?v=IzJbo1DlJSQ)
; 
; This IVR attemps to recreate Becky's voicemail menu for fun :)
; It can also serve as an example of how to go about constucting IVRs in
; asterisk.
;
; don't forget to include becky/dialplan/becky_config.conf somewhere
; in your asterisk config !


; IVR template. When user presses an unknown keypad or doesn't press
; any key after BECKY_TIMEOUT seconds, replay the last prompt (labeled as 'loop')
; The pound sign '#' will also be used to skip to the next prompt whenever possible.
[becky-ivr](!)
exten => i,1,Goto(s,loop)
exten => t,1,Goto(s,loop)

; Spam protection to prevent spammers from abusing bandwidth or
; overbilling my VoIP account. 
[becky-spam-protect]
exten => s,1,NoOp(becky spam protection)
same => n,NoOp(${CALLERID(num)})
same => n,NoOp(${CALLERID(name)})
same => n,AGI(${BECKY_DIR}/agi/call_limit.py)
same => n,GotoIf($[${CALL_ALLOWED}=1]?becky-answer,s,1)

; if the AGI script fails for some reason, or the call isn't allowed,
; then reject the call
same => n,Goto(becky-reject-call,s,1)

; context used for rejecting spammers
[becky-reject-call]
exten => s,1,Congestion(0)
same => n,Hangup()

; Beginning of the IVR. Answer the call and limit the total time to 5 minutes
; (The average time needed to complete the IVR is between 1 and 2 minutes)
[becky-answer]
exten => s,1,Answer(500)
same => n,Set(TIMEOUT(absolute)=${BECKY_MAX_DURATION})
same => n,Goto(becky-welcome,s,1)

; ===PROMPT=== vous avez rejoint la boite vocale de becky. veuillez laisser un message
[becky-welcome](becky-ivr)
exten => s,1(loop),Background(becky/leave-message)
; record a message, but since becky is impatient we'll only record a few seconds ;)
same => n,Set(RECORDING=${BECKY_RECORDINGS}/${CALLERID(num)}-${STRFTIME(,,%Y-%m-%d_%H-%M-%S)})
same => n,Record(${RECORDING}/message.wav,${BECKY_SILENCE},${BECKY_TIMEOUT})
same => n,Goto(becky-confirm-message,s,1)

exten => #,1,Goto(becky-confirm-message,s,1)

; ===PROMPT=== Si vous etes satisfait de votre message faites le 1, sinon faites le 2
[becky-confirm-message](becky-ivr)
exten => s,1(loop),Background(becky/confirm-message)
same => n,WaitExten(${BECKY_TIMEOUT})

; At this point in the sketch Brenda presses 2 to go on. 
; We don't know what happens when pressing 1, so we go back to the beginning of the IVR
exten => 1,1,Goto(becky-welcome,s,1)
exten => 2,1,Goto(becky-confirm-satisfied,s,1)

; ===PROMPT=== Vous avez fait le 2. Si vous etes satisfait d'avoir fait le 2, faites le 1
[becky-confirm-satisfied](becky-ivr)
exten => s,1,Playback(becky/pressed-2)
same => n(loop),Background(becky/confirm-satisfied-press-1)
same => n,WaitExten(${BECKY_TIMEOUT})

exten => 1,1,Goto(becky-confirm-complex,s,1)

; ===PROMPT=== Faites le 3 si vous etes satisfait de votre message pcq vous avez fait le 1... (etc etc etc)
[becky-confirm-complex](becky-ivr)
exten => s,1,Playback(becky/pressed-1)
same => n(loop),Background(becky/press-number-complex)
same => n,WaitExten(${BECKY_TIMEOUT})

; in the sketch brenda runs out of time at this prompt, so we go on to the next one ;)
same => n,Playback(becky/time-run-out)
same => n,Goto(becky-more-time,s,1)

; I *think* that 3 is for 'satisfied' and 4 is for 'not satisfied', 
; but the sketch is a little hard to follow so i'm not sure ;)
exten => 3,1,Goto(becky-more-time,s,1)
exten => 4,1,Goto(becky-welcome,s,1)


; ===PROMPT=== faites le 5 si vous voulez 10 secondes a fin de faire le 3... (etc)
[becky-more-time](becky-ivr)
exten => s,1(loop),Background(becky/confirm-more-time)
same => n,WaitExten(${BECKY_TIMEOUT})

; Brenda didn't do this in the sketch. This is based on what Becky explains in the prompt
; wait 10 seconds before going back to the last prompt so that you can either press on 4 or 3 again.
exten => 5,1,Playback(becky/10secs)
same => n,Goto(becky-confirm-complex,s,loop)
exten => 6,1,Playback(becky/10secs)
same => n,Goto(becky-confirm-complex,s,loop)

; Brenda presses 7 in the sketch, however the IVR told her that she pressed 9 ;)
exten => 7,1,Goto(becky-say-name,s,1)
exten => 8,1,Goto(s,loop)
exten => 9,1,Goto(becky-say-name,s,1)

; ===PROMPT=== dites le nom de la personne que vous desirez parler
[becky-say-name](becky-ivr)
exten => s,1,Playback(becky/pressed-9)
same => n,Background(silence/1)
same => n(loop),Background(becky/say-name)
same => n,Record(${RECORDING}/name.wav,${BECKY_SILENCE},${BECKY_TIMEOUT})
same => n,Goto(becky-confirm-name,s,1)

exten => #,1,Goto(becky-confirm-name,s,1)

; ===PROMPT=== vous avez dit vignila. Pour choisir ce nom, faites le carre. Pour recommencer, faites l'etoile
[becky-confirm-name](becky-ivr)
exten => s,1,Playback(becky/said-vignila)
same => n(loop),Background(becky/confirm-name)
same => n,WaitExten(${BECKY_TIMEOUT})

exten => #,1,Goto(becky-enter-name,s,1)
exten => *,1,Goto(becky-press-star,s,1)

; ===PROMPT=== faites l'etoile sur le clavier
[becky-press-star](becky-ivr)
exten => s,1(loop),Background(becky/press-star)
same => n,WaitExten(${BECKY_TIMEOUT})

exten => *,1,Goto(becky-enter-name,s,1)

; ===PROMPT=== entrez le nom complet telephonique
[becky-enter-name](becky-ivr)
; 'BECKY' is 5 letters, so we stop reading numbers after 5 keys
exten => s,1(loop),Read(name,becky/enter-name,5,,${BECKY_TIMEOUT})
; don't go onto next prompt until the person has entered at least one number
same => n,GotoIf($[${LEN(${name})}==0]?loop)
same => n,Goto(becky-wakete,s,1)

; ===PROMPT=== vous avez epelle wakete
[becky-wakete](becky-ivr)
exten => s,1,Playback(becky/spelled-wakete)
same => n,Background(silence/1)
same => n(loop),Background(becky/wakete-explanation)
same => n,Background(silence/1)

; THE END ! Say thank you and finish call
same => n,Playback(auth-thankyou)
same => n,Playback(vm-goodbye)
same => n,Hangup()

exten => #,1,Hangup()
